{"version":3,"sources":["Paragraph/Paragraph.js","Title/Title.js","Expertise/Expertise.js","About/About.js","Contacts/Contacts.js","Header/Header.js","ProgressBar/ProgressBar.js","Skills/Skills.js","Experience/Experience.js","App.js","serviceWorker.js","index.js"],"names":["Paragraph","_ref","text","react_default","a","createElement","className","Title","Expertise","iconName","title","description","iconClass","concat","expertises","icon","About","src_Title_Title","src_Paragraph_Paragraph","map","index","src_Expertise_Expertise","key","Contacts","href","target","rel","Header","onSectionChange","src","alt","data-section","ProgressBar","value","style","width","Skills","src_ProgressBar_ProgressBar","Experience","range","company","App","src_Header_Header","src_Contacts_Contacts","src_About_About","src_Skills_Skills","src_Experience_Experience","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fcbda6a2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Paragraph.css\";\nconst Paragraph = ({text}) => (\n    <p className=\"Paragraph\">\n        {text}\n    </p>\n  );\n  \n  export default Paragraph;","import React from \"react\";\nimport \"./Title.css\";\nconst Title = ({text}) => (\n    <h2 className=\"Title\">\n        {text}\n    </h2>\n  );\n  \n  export default Title;","import React from \"react\";\nimport \"./Expertise.css\";\n\nconst Expertise = (({iconName, title, description }) => {\n    const iconClass=`Expertise__icon ${iconName}` \n    return (<div className=\"Expertise\">\n        <i  className={iconClass} ></i>\n        <h2>{title}</h2>\n        <p className=\"Expertise__description\">{description}</p>\n    </div>)\n});\n    \n  \nexport default Expertise;","import React from \"react\";\nimport Paragraph from \"../Paragraph/Paragraph\";\nimport Title from \"../Title/Title\";\nimport \"./About.css\";\nimport Expertise from '../Expertise/Expertise';\n\nconst expertises =[{title: 'Web Development', icon:'fas fa-code', description:'Lorem ipsum dolor sit amet, at elit saepe corpora est, soluta cotidieque ad his'}, \n{title: 'DevOps', icon:'fas fa-rocket', description:'Lorem ipsum dolor sit amet, at elit saepe corpora est, soluta cotidieque ad his'},\n{title: 'Team Player', icon:'fas fa-people-carry', description:'Lorem ipsum dolor sit amet, at elit saepe corpora est, soluta cotidieque ad his'}]\n\n\nconst About = () => {\n  return (\n    <div className=\"About\">\n    <Title text=\"About\"></Title> \n    <Paragraph text=\"Lorem ipsum dolor sit amet, at elit saepe corpora est, soluta cotidieque ad his, aliquando abhorreant vituperata ne eum. Id qui habeo erant consul, tempor viderer minimum sed ea. Labitur laboramus mea id, eos detraxit assentior ad. Scripta ocurreret repudiandae mea no, an vim liber sonet vivendo. At eos vidit impetus insolens, in dolore intellegebat eos.\"></Paragraph>\n    <div className=\"About__expertises\">\n    {expertises.map(({title, icon, description}, index) => <Expertise key={index} title={title} iconName={icon} description={description}></Expertise>)}\n    </div>\n    </div>\n  )};\n  \nexport default About;","import React from \"react\";\nimport \"./Contacts.css\";\nconst Contacts = () => (\n    <div className=\"Contacts\">\n        <a href=\"mailto:antoine.leproust@gmail.com?Subject=Hello%20Antoine!\" target=\"_top\">\n            <i  className=\"Contacts__icons fas fa-envelope\" ></i>\n        </a>\n        <a href=\"https://github.com/aleproust/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <i  className=\"Contacts__icons fab fa-github\" ></i>\n        </a>\n        <a href=\"https://www.linkedin.com/in/antoineleproust/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <i  className=\"Contacts__icons fab fa-linkedin\" ></i>\n        </a>\n    </div>\n  );\n  \n  export default Contacts;","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = ({ onSectionChange }) => (\n    <header className=\"Header\">\n      {/* <Menu onSectionChange={onSectionChange} /> */}\n      <div className=\"Header__banner\">\n        <img className=\"Header__logo\" src=\"/assets/img/me.png\" alt=\"Antoine LEPROUST\" />\n        <h1 className=\"Header__name\">Antoine Leproust</h1>\n        <h2 className=\"Header__job\" data-section=\"headline\">\n          Web developer @ Ubisoft Montr√©al\n        </h2>\n      </div>\n    </header>\n  );\n  \n  export default Header;","\nimport React from \"react\";\nimport './ProgressBar.css';\nconst ProgressBar = ({value}) =>{\n\n    return (<div className=\"ProgressBar\">\n    <div className=\"ProgressBar__bar\" style={{width: value}}></div>\n  </div>)\n}\nexport default ProgressBar;\n","import React from \"react\";\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport \"./Skills.css\";\nconst Skills = () => {\n\n    const skills = [{\n        title: 'Javascript',\n        value: '80%'\n    },\n    {\n        title: 'CSS',\n        value: '70%'\n    },\n    {\n        title: 'DevOps',\n        value: '65%'\n    },\n    {\n        title: 'DevOps',\n        value: '65%'\n    },\n    {\n        title: 'Angular',\n        value: '90%'\n    }, \n    {\n        title: 'NodeJS',\n        value: '85%'\n    }]\n        return (<div className=\"Skills\">\n            {skills.map(({title, value}, index)=> {\n                return (\n                    <div key={index} className=\"Skills__item\">\n                        <h3>{title}</h3>\n                        <ProgressBar value={value}></ProgressBar>\n                    </div>\n                )\n            })}\n        </div>)\n    }\n;\n  \n  export default Skills;","\nimport React from \"react\";\nimport './Experience.css';\nconst Experience = ({range, company, title, description}) =>{\n    return (\n    <div className=\"Experience\">\n        <div className=\"Experience__left\">\n            <div className=\"Experience__range\">\n                {range}\n            </div>\n            <div className=\"Experience__company\">\n                {company}\n            </div>\n        </div>\n    <div className=\"Experience__right\">\n        <div className=\"Experience__title\">\n            {title}\n        </div>\n        <div className=\"Experience__description\">\n            {description}\n        </div>\n    </div>\n  </div>)\n}\nexport default Experience;\n","import React, { Component } from 'react';\nimport About from './About/About';\nimport './App.css';\nimport Contacts from './Contacts/Contacts';\nimport Header from './Header/Header';\nimport Skills from './Skills/Skills';\nimport Title from './Title/Title';\nimport Experience from './Experience/Experience';\n\n\nclass App extends Component {\n  render() {\n\n    const experiences = [{\n      range: 'February 2017 - Present',\n      company: 'Ubisoft',\n      title: 'Web Developer',\n      description: 'Lorem ipsum dolor sit amet, at elit saepe corpora est, soluta cotidieque ad his, aliquando abhorreant vituperata ne eum. Id qui habeo erant consul, tempor viderer minimum sed ea. Labitur laboramus mea id, eos detraxit assentior ad. Scripta ocurreret repudiandae mea no, an vim liber sonet vivendo. At eos vidit impetus insolens, in dolore intellegebat eos.'\n    },\n    {\n      range: 'May 2015 - January 2017',\n      company: 'Canal+',\n      title: 'Web Developer',\n      description: 'Lorem ipsum dolor sit amet, at elit saepe corpora est, soluta cotidieque ad his, aliquando abhorreant vituperata ne eum. Id qui habeo erant consul, tempor viderer minimum sed ea. Labitur laboramus mea id, eos detraxit assentior ad. Scripta ocurreret repudiandae mea no, an vim liber sonet vivendo. At eos vidit impetus insolens, in dolore intellegebat eos.'\n    }]\n    return (\n      <div className=\"App\">\n        <Header></Header>\n        <div className=\"Page\">\n          <div className=\"Page__inner\">\n            <Contacts></Contacts>\n            <div className=\"Page__section\">\n              <About></About>  \n            </div>\n            <div className=\"Page__section\">\n              <Title text=\"Skills\"></Title>\n              <Skills></Skills>\n            </div>\n            <div className=\"Page__section\">\n              <Title text=\"Experiences\"></Title>\n              {experiences.map(({range, company, title, description}, index) => \n              (<Experience key={index} range={range} company={company} title={title} description={description}></Experience>))}\n            </div>\n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}